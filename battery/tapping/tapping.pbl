define Start(p)
{
  #############################################################
  ## This is a simple keyboard tapping task. It has been
  ## used to test low-level motor ability, and may be impacted
  ## by things like fatigue and sleep deprivation.
  ##
  ## It is modeled after the Finger Tapping or Oscillation task
  ## in the Reitan Test battery.  That test uses a special-purpose
  ## tapping lever to collect data, so the norms for those data may
  ## not apply to the results of the current test.
  ##
  ## (c) 2010 Shane T. Mueller (smueller obereed net)
  #############################################################

  ## The time of each trial
  trialtime <- 10*1000   #number of seconds * 1000 = ms
  maxTrials <- 10


 
  ShowCursor(0)
  gSleepEasy <- 1
  gVideoWidth <- 800
  gVideoHeight <- 600
  gWin <- MakeWindow("black")

  gSubNum <- GetSubNum(gWin)
  gFileOut <-FileOpenAppend("tapping-"+gSubNum+".txt")

  font <-  MakeFont("VeraMono.ttf",0,28,MakeColor("white"),MakeColor("black"),1)
  
  inst <- "In this task, you are asked to tap the keyboard as quickly as possible for a maximum of "+ maxtrials +" trials of " +
  trialtime/1000 + " seconds.  Use  the 'A' key.  Begin tapping when you see 'GO'.  Press 'A' to begin."

   tb <- MakeTextBox(inst,font,700,500)
   AddObject(tb,gWin)
   Move(tb,50,50)


  Draw()

  lab <- EasyLabel("",gVideoWidth/2,gVideoHeight/2,gwin,24)
  Hide(lab)

  data <- []
  trial <- 1


   WaitForKeyPress("A")

  gProgressSize <- 300
  progressoutline <- Rectangle(gVideoWidth/2,gVideoHeight/2-100,gProgressSize,30,MakeColor("darkgrey"),1)
  progressBar <- Rectangle(gVideoWidth/2-gProgressSize/2,gVideoHeight/2-100,
                             1,30,MakeColor("red"),1)
  AddObject(progressoutline,gWin)
  AddObject(progressBar,gWin)


  ##We do between 5 and ten trials.
  while (trial <= maxtrials) 
  {

     sumx  <- 0.0
     sumxx <- 0.0
     ##On the trial, gate the beginning with the "A" press
     lab.text <- "Press 'A' to begin"
     Show(lab)
     DrawProgress(progressbar,0)
     Show(progressoutline)
     Show(progressbar)
     Hide(tb)   
     Draw()      
     WaitForKeyPress("A")
     Hide(lab)
     Draw()
     Wait(2000)    #Give 2 seconds before trial begins

     lab.text <- "GO:"
     Show(lab)
     Draw()

     ##Give a 1 second lead time
     Wait(1000)
     Draw()

     ##Compute the end-time of the trial
     timeStart <- GetTime()
     finaltime <- timeStart + trialtime
     hits <- 0  
     while(GetTime() < finaltime)
     {
       time0 <- GetTime()
       x <- 0
       while((not x=="a") and GetTime() < finaltime )
       {
     	   x <-  WaitForListKeyPressWithTimeout(["A"],50,1)

           time <- GetTime()
           remaining <- Ceiling((finaltime - time)/1000)
     	   lab.text <- "GO: [" + remaining + "]"
    	   DrawProgress(progressbar,  1.0-(finaltime-time)/trialtime)
           Draw()   
       }

       rt <- time-time0

       sumX <- sumX + rt
       sumXX <- sumXX + (rt)^2
       FilePrint(gFileOut,gSubNum + " " + trial + " " + hits + " " +  sumX + " " +( time-timestart) + " " + rt )

       hits <- hits + 1
     }


   n <- hits
   mean <- sumX/n
   sd   <- Sqrt(sumXX/n - mean^2)


   data <- Append(data,[n,mean, sd, (time-timestart)])


   ## Give feedback for each trial.
   Hide(progressbar)
   Hide(progressoutline)
   Hide(lab)
   Show(tb)
   tb.text <- "Trial "+trial+" results: "+CR(2)+
               "Hits:     " + n + " keypresses" + CR(1) +
               "Mean RT:  "+ Round(mean) + " ms/tap" + CR(1) +
               "SD RT:    "+ Round(sd) + " ms" + CR(1) +
               "Total Time: " + (time-timestart) + CR(2) +" Press X to continue."
   Draw()


   ##Now, see if we should stop recording.
   if(trial >= 5)
   {
    
     last5 <- SubList(First(Transpose(data)),trial+1-5,trial)
	 range <- Max(last5)-Min(last5)
     ##if the range is small, we can quit
     if(range < 5)
     {
      trial <- maxTrials
     }
   }

   trial <- trial + 1
   WaitForKeyPress("X")
  }


  tb.text <- "Summary data:"+CR(1) + 
          "Trial   Hits  RT   SD  Time"+
  CR(1)+ "------------------------------" + CR(1)
  trial <- 1
   loop(i, data)
    {

      tb.text <- tb.text +  Print(trial + "       " +First(i) +
                  "    "  +     Round(Second(i)) + "  "  +
                  Round(Third(i)) + " " +  Fourth(i) +CR(1))
      trial <- trial + 1  
  }

  Print(tb.text)
  sumfile <-  FileOpen("tapping-summary-"+gSubNum+".txt")

  FilePrint(sumfile, tb.text)

  Show(tb)
  Draw()
  WaitForKeyPress("X")

}

##hardcoded with all the right parts.
##percent is a value between 0 and 1.0
define DrawProgress(bar,percent)
{

	bar.x <- gVideoWidth/2-gProgressSize/2 + gProgressSize/2*percent
	bar.width <- gProgressSize *percent
}
