define Start(lPar)
{

  #open a file for writing to.
  gFileOut <- FileOpenWrite("ld-"+ gSubnum +".txt")

  #Read in the words/nonwords.  
  words <- FileReadList("ld.txt")
  #create stimuli
  type <- Merge(Repeat("W",14),Repeat("L",14))
  stim<-Shuffle(Transpose([words,type]))


  #Initialize basic display objects.
  lBG <- MakeColor("GREY")
  lFG <- MakeColor("RED")
  gFont <- MakeFont("Vera.ttf",0,22,lFG,lBG,1)
  gWin <- MakeWindow("GREY")

  #handle the instructions.
  instructions <- "Use 'Y' for words and 'N' for nonwords. Press any key to begin the lexical decision task."
  inst <- MakeTextBox(instructions, gFont,400,400)
  AddObject(inst,gWin)
  Move(inst, 100,100)
  Draw()
  WaitForAnyKeyPress()
  RemoveObject(inst,gWin)
  Draw()
  Wait(3000)

  #Now, do the task.
  trial <- 1
  loop(i,stim)
  {
   #Print out basic info to the output file.
   FilePrint_(gFileOut, gSubnum + " " + trial + " ")
   Trial(i)
   trial <- trial + 1
  }
  FileClose(gFileOut)
}


#This is a basic lexical decision trial
define Trial(stim)
{
  fixation<-MakeLabel("+",gFont)
  text <- MakeLabel(First(stim),gFont)
  type <- Nth(stim,2)

  ##Add labels to window
  AddObject(fixation,gWin)	
  AddObject(text,gWin)

  ##Move them to the same place
  Move(fixation, 300,240)
  Move(text, 300,240)

  ##Show the fixation
  Show(fixation)
  Hide(text)
  Draw(gWin)

  #Wait a little while
  Wait(500)

  Hide(fixation)
  Show(text)
  time1<-GetTime()
  Draw(gWin)

  response <- WaitForListKeyPress(["Y","N"])
 
  if(type == "W")
    {
       if(response == "Y")
         { 
            correct <- 1
         } else {
            correct <- 0
         }
    } else {
       if(response == "Y")
         { 
            correct <- 0
         } else {
            correct <- 1
         }
    
    }
  
  time2 <- GetTime()
  FilePrint_(gFileOut,First(stim))
  FilePrint_(gFileOut, " " + response)
  FilePrint_(gFileOut," " + correct)
  FilePrint(gFileOut,  " " + (time2-time1)) 
  RemoveObject(text, gWin)
  RemoveObject(fixation,gWin)
  ClearEventLoop()
  return 1	
}



