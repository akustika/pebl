##Simple free recall task, using toronto word pool

define Start(p)
{

  parpairs <- [["numlists",3],
               ["listlength",10],
	       ["timeperword",2000],
	       ["isi",250],
	       ["delay",1000]]##delay before recall

  gParams <- CreateParameters(parpairs,gparamFile)

  
  gWin <- MakeWindow("black")
  gSleepEasy <- 1
   if(gSubNum+""=="0")
   {
     gSubNum <- GetSubNum(gWin)
   }

   header <- "subnum,block,trial,resp,corr,time"
   gFileOut <- GetNewDataFile(gSubNum,gWin,"freerecall","csv",header)
   header <- "subnum,block,position,word,time"
   gPresentedFile <- GetNewDataFile(gSubNum,gWin,"freerecall-presented","csv",header)



  words <- Shuffle(FileReadList("torontowordpool.txt"))
 
  subset <- SampleN(words,gParams.numlists*gParams.listlength)

  lists <- FoldList(subset,gParams.listlength)
  
   MessageBox("In this task, you will see a sequence of words.  Try to remember as many words as possible.  Once you have seen all the words, you will be given a chance to recall (by typing) as many as you can remember.  Recall the words in any order you choose.  You need to spell the word correctly to get credit, but don't worry about capitalizing words. Try not to repeat words you have already recalled, but it is OK to if you are not sure.",gWin)

   stim <- Easylabel("+", gVideoWidth/2,gVideoHeight/2,gWin,60)
   header <- Easylabel("Try to remember each word", gVideoWidth/2,150,gWin,25)
   input <- EasyTextbox("",gVideoWidth/2-200,gVideoheight/2+100,gWin,30,400,80)

   
  gBlock <- 1  
  loop(words,lists)
   {
   Hide(input)
   MessageBox("Hit OK to see the list of words",gWin)
   Draw()
   Showcursor(0)
   Wait(1000)



     position <- 1
     loop(word,words)
     {
     
      Show(stim)
      stim.text <- word
      Draw()
      Wait(gParams.timeperword)
      Hide(stim)
      Draw()
      Wait(gParams.isi)
      FilePrint(gpresentedfile,gSubnum+","+gBlock+","+position+","+word+","+GetTime())
      position <- position   + 1

     }

     ##do recall

     Hide(stim)
     header.text <- ""
     Draw()
     Show(input)

     Wait(gParams.delay)
     header.text <- "Type response (make empty entry when done)."
     Draw()

     resp <- "X"
     position <- 1
     sequence <- Sequence(1,gparams.listlength,1)
     while(not resp =="")
     {
       time1 <- GetTime()
       input.text <- ""
       resp<- GetInput(input,"<return>")
       time2 <- GetTime()

       onlist <- Lookup(Uppercase(resp),words,sequence)

       if(IsList(onlist))
       {
           correct <- 0
	   onlist <- 0
       } else {
           correct <- 1
       }
       FilePrint(gFileOut,gSubNum+","+gBlock+","+resp+","+position+","+onlist+","+correct+","+(time2-time1)+","+time2)
       position <- position+ 1
     }

     gBlock <- gBlock + 1
   }
   

}
