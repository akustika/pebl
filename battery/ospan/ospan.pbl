##PEBL Operation Span Test

define Start(p)
{

  ##Conditions
  ascending <- 1
  lengths <- [2,2,3,3,4,4,5,5,6,6]

  Init()

  if(not ascending)
  {
   lengths <- Shuffle(lengths)
  }

  stim <- Stim()
  probs <- Problems()

  x <-   MakeResponseScreen()
   Draw()
   WaitForAnyKeyPress()

#  loop(i, lengths)
#    {
#       probsi <- SampleN(probs,i)
#       stimi <- SampleN(stim,i)
#       Trial(probsi,stimi)
#    }

}


define Trial(problems,stim)
{

   sequence <- Transpose([problems,stim])
   loop(i,sequence)
   {
      prob <- First(i)
      proba <- First(prob)
      sol <- Second(prob)

      stim <- Second(i)
      #Problem:
      gStim.text <-  proba + " = ? " + stim
      gFooter.text <- "Encode Stimulus" 
      Draw()
      Wait(1000)
      gFooter.text <- "When you have solved the math problem, click the mouse to continue"
      gStim.text <- proba
      Draw()
      WaitForAnyKeyPress()
      
   }
 


}

define RegisterClickOnEvent(rectangle)
{
	##done
   Print("registering")

}


define MakeResponseScreen()
{
  gridpoints <-  LayoutGrid(4,3,gHomeX,gHomeY-100,
                  gVideoWidth-200,
                  gVideoHeight-300)      

   

   ##Put the gridpoints and the stimuli together
   stim <- Stim()
   Print(stim)
   Print(gridpoints)
   seq <- Transpose([gridpoints,stim])

   objs <- []
   loop(i,seq)
    {
      pts <- First(i)
      tmp <- ClickResp(First(pts),Second(pts),Second(i))
      objs <- Append(objs,tmp)
    }
    
     blank <- EasyTextBox("blank",gHomeX-50, gVideoHeight-200,gWin,25,100,40)
     clear <- EasyTextBox("clear",gHomeX-300, gVideoHeight-50,gWin,25,100,40)
     exit  <- EasyTextBox("Exit", gHomeX+200, gVideoHeight-50,gWin,25,100,40)

   Draw()
   objs <- Append(objs,[blank,clear,exit])
   return objs   
}

define ClickResp(x,y,code)
  {
     tb <- EasyTextBox("",x-60,y-30,gWin,25,40,40)
     lab <- EasyLabel(code,x+30,y,gWin,25)
   	 return [tb,lab]
  }



define Init()
{
    gWin <- MakeWindow("black")
    gHomeX <- gVideoWidth/2
    gHomeY <- gVideoHeight/2
    gSleepEasy <- 1
    
    gStim <- EasyLabel("",gHomeX,gHomeY,gWin,25)
    gFooter<- EasyLabel("",gHomeX,gVideoHeight-50,gWin,20)
}

define Problems()
{

  probs <- [[["3+1-1"],3],
            [["4+1-2"],3],
			[["5+1-3"],3],
			[["3+2-4"],1],	
			[["4+2-5"],1],
			[["5+2-6"],1],
			[["3+3-1"],5],
			[["4+3-2"],5],
			[["5+3-3"],5],
			[["3+3-4"],2],
			[["4+3-5"],2],
			[["5+3-6"],2]]



   return Shuffle(probs)
}

define Stim()
{
    x<-["F","H","J","K","L","N","P","Q","R","S","T","Y"]
    return x 
}


define LayoutGrid(high,across,centerx,centery,width,height)
{

     points <- []
     i <- 1

     dx <- width/(across-1)
	 dy <- height/(high-1)
     x <- centerx - width/2
     y <- centery - height/2
     while(i <= high)
      {

 	    j <- 1 
        x <- centerx-width/2
        while(j <= across)
        { 
          j <- j + 1
 		  points <- Append(points,[x,y])
		  x <- x + dx
        }
	   y <- y + dy
       i <- i + 1
      }
   

  return points
}
