define Start(p)
{

  pskip <- .4  #proportion of trials that jump
  gRad <- 240  #radius, in pixels, of clock circle
  gSize <- 9   #size of target

  gWin <- MakeWindow("black")
  gBasecolor <- MakeColor("white")
  gTargcol <- MakeColor("red")
  gHomeX <- gVideoWidth/2
  gHomeY <- gVideoHeight/2
  gSubNum <-GetSubNum(gWin)

  #Get starting position and put red target there.
  xy <- GetXY(1)
  targ <- Circle(First(xy),Second(xy),gSize,gTargcol,1)
  AddObject(targ,gWin)
  

  ##Create target positions:
  pos <- []
  circs <- []
  mins <- Sequence(1,60,1)
  loop(i,mins)
  {
     xy <- GetXY(i)
     pos <- Append(pos,xy)
     circ <-  Circle(First(xy), Second(xy),gSize,gBaseColor,0)
     AddObject(circ,gWin)
	 circs <- Append(circs,circ)


  }
  ShowCursor(0)
  tb <-  EasyTextBox ("Press any key to begin."+CR(2)+
"Hit space bar when red circle skips a position.",250,200,gWin,22,300,120)
  Draw()
  WaitForAnyKeyPress()

  tb.text <-  "Watch the red target. "+CR(2)+"Hit space bar when red circle skips a position."
  fileOut <- FileOpenAppend("clock-"+gSubNum+".txt")
  FilePrint(fileout,"subnum trial ticker sec skip resp corr starttime rt curtime")  
  trials <- 60
  trial <- 1
  ticker <- 1
  second <- 1
  doskip <- 0
  lastend <- GetTime()

  while(trial < trials)
  {
   ##compute seconds/clock position, and move there.
    second <- Mod(ticker,60)
    pos <- GetXY(second)
    Move(targ,First(pos),Second(pos))
	Show(targ)
    Draw()

    ##cycle should end 1000 ms after current 
    nexttime <- lastend + 1000
    curtime <- GetTime()


    resp <-  WaitForListKeyPressWithTimeout([" "],nexttime - curtime,1)
    rtime <- GetTime()
    ##Score response
    if(not IsList(resp))
     {
       pressed <- 1
       Wait(nexttime - GetTime())

     } else {
       pressed <- 0
     }
  
     if(resp == " ")
      {  
        resp <- 1
      }else{
        resp <- 0
      }
  
    corr <- resp == doskip

    FilePrint(fileout,gSubNum + " " + trial + " " + ticker + " " + second + " " + doskip+
	       " " + resp +" " + corr + " " + rtime + " " + (rtime - curtime) + " " + GetTime())
    lastend <- GetTime()
    ##Determine if we should skip on this trial.
    if(Random() < pskip)
     {
       doskip <- 1

     } else {

       doskip <- 0
     }
  
    trial <- trial + 1
    ticker <- ticker + doskip + 1
       
    ##Do a brief disappear of the target.

    Hide(targ)
    Draw()
    Wait(400)
  }

  tb.text <-  "Thank you.  Hit 'x' to exit"
  Draw()
  WaitForKeyPress("X")
}

##Gets x,y coordinates based on 1:60 minutes.
define GetXY(minute)
{
     angle <- 2*3.14159/360 * (minute * 6 -90)
     x <- gRad * Cos(angle) + gHomeX
     y <- gRad * Sin(angle) + gHomeY
  return [x,y]
}
